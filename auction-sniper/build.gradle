plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
}

repositories {
    jcenter()
}

sourceSets {
    acceptance {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    acceptanceImplementation.extendsFrom testImplementation
    acceptanceRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.igniterealtime.smack:smack:3.2.1'
    implementation 'org.igniterealtime.smack:smackx:3.2.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    acceptanceCompile 'com.googlecode.windowlicker:windowlicker-swing:r268'
}

def printTestResult = {desc, result ->
    if (!desc.parent) {
        println "Test result: ${result.resultType}"
        println "Test summary: ${result.testCount} tests, " +
                "${result.successfulTestCount} succeeded, " +
                "${result.failedTestCount} failed, " +
                "${result.skippedTestCount} skipped\n"
    }
}

test {
    useJUnitPlatform()
    afterSuite printTestResult
}

task acceptanceTest(type: Test) {
    description = 'Runs acceptance tests.'
    group = 'verification'
    testClassesDirs = sourceSets.acceptance.output.classesDirs
    classpath = sourceSets.acceptance.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()
    afterSuite printTestResult
}

check.dependsOn acceptanceTest

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
        plusConfigurations += [ configurations.acceptanceRuntime ]
    }
}

idea {
    module {
        testSourceDirs += sourceSets.acceptance.java.srcDirs
        testResourceDirs += sourceSets.acceptance.resources.srcDirs
    }
}
